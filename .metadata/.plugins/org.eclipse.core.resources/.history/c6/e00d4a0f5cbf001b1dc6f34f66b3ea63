package br.com.home.lambda;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

public class Exemplo04 {
	
	public static void main(String[] args) {
		System.out.println("Imprime todos os elementos da lista!");
		//List<Integer> list = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
		
		int array01[] = {1, 2, 3, 4};
		
		List<Integer> list = Arrays.stream(array01).boxed().collect(Collectors.toList());
		
		list.forEach(n -> System.out.println(n));
		
		Integer reduce = list.stream()
			.mapToInt(Integer::intValue)
			.sum();
			
		System.out.println("reduce => " + reduce);
		
		list.stream().sorted(Comparator.reverseOrder()).forEach(System.out::println);
		
			
		
		
//		List<Integer> intList = new ArrayList<Integer>(array01.length);
//		for (int i : array01)
//		{
//		    intList.add(i);
//		}
//		
//		intList.remove(array01.length-1);
//		intList.forEach(n -> System.out.println(n));
		
		
		
		
		
//		Listagem 8. Imprimindo o quadrado dos elementos da lista
//		list.forEach(n -> System.out.println(n * n));
		
//		Listagem 7. Imprimindo apenas os elementos pares de uma lista		
//		list.forEach(n -> {
//			if(n % 2 == 0) {
//				System.out.println(n);
//			}
//		});
		
// Listagem 6. Imprimindo os elementos de uma lista com expressÃµes lambda		
//		list.forEach(n -> System.out.println(n));
		
// Listagem 5. Imprimindo os elementos de uma lista
//		for(Integer n: list) {
//		    System.out.println(n);
//		}
	}

}
